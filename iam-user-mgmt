import json
import boto3    

names = ["John","Leah","Bob","Peter","Lucy","Sally","Aaron"]
names2 = ["Luke","Tom","Brenda"]
names3 = ["Paul","Kwame","Micah, Sydney, Josh"]


def create_user(
    user_name
):
    print("The new user name is " + user_name)
    create_response = iam_client.create_user(UserName = user_name)
    """Fetches user names from list entitled names, names2, and names3.

    Adds new users to the IAM User Management console. 

    Args:
        user_name: name entered as string.

    Returns:
        A new user is represented as a concatenated string response. 
        For example:

        User, Paul has now been added to IAM Mgmt

    Raises:
        An error occurrs for duplicate names.
        For example:
        
        EntityAlreadyExistsException
    """

def delete_user(
    user_name
):
    delete_response = iam_client.delete_user(UserName = user_name)
    """Fetches user names from list names, names2, and names3.

    Deletes users from the IAM User Management console. 

    Args:
        user_name: name entered as string.

    Returns:
        A new user is represented as a concatenated string response. 
        For example:

        User, Paul has now been added to IAM Mgmt

    Raises:
        An error occurrs for duplicate names.
        For example:
        
        EntityAlreadyExistsException
    """
    
def lambda_handler(
    event, context
):  
    global iam_client
    iam_client = boto3.client('iam')
    
    # for n in names3:
    #     delete_user(n)
    #     print("User, " + n + " has now been deleted from IAM Mgmt")
    
    # for n in names3:
    #     create_user(n)
    #     print("User, " + n + " has now been added to IAM Mgmt")
    
    # new_user = create_user("Abraham")
